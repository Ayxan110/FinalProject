// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectAPI.Data;

namespace FinalProjectV2.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20200325111821_NewsAdded")]
    partial class NewsAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinalProjectV2.Data.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("FinalProjectV2.Data.Entities.ProductSpec", b =>
                {
                    b.Property<int>("SpecificationId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecificationId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductSpec");
                });

            modelBuilder.Entity("FinalProjectV2.Data.Entities.Specification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specification");
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.AdvertisementSlider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.ToTable("AdvertisementSliders");
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ELEKTRONIKA"
                        },
                        new
                        {
                            Id = 2,
                            Name = "KOMPÜTERLƏR"
                        },
                        new
                        {
                            Id = 3,
                            Name = "OYUNLAR"
                        },
                        new
                        {
                            Id = 4,
                            Name = "FOTO VƏ VİDEO"
                        },
                        new
                        {
                            Id = 5,
                            Name = "MƏİŞƏT AVANDANLIQLARI"
                        },
                        new
                        {
                            Id = 6,
                            Name = "PARFÜM VƏ KOSMETİKA"
                        },
                        new
                        {
                            Id = 7,
                            Name = "EV ƏŞYALARI"
                        });
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "aykhanzd@code.edu.az",
                            PhoneNumber = "+994556550511"
                        });
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.LoginModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoginModels");
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.Marka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("SubCategoryItemsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryItemsId");

                    b.ToTable("Markas");
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MarkaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.HasIndex("MarkaId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("GuaranteeDate")
                        .HasColumnType("tinyint");

                    b.Property<byte>("GuaranteePrice")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsInBasket")
                        .HasColumnType("bit");

                    b.Property<string>("MainPhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("SalePercent")
                        .HasColumnType("tinyint");

                    b.Property<string>("ShipDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ShipPrice")
                        .HasColumnType("tinyint");

                    b.Property<string>("Specification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubCategoryItemsId")
                        .HasColumnType("int");

                    b.Property<byte>("TestDate")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryItemsId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "iphone.jpg",
                            Name = "Apple iPhone 11 Pro Dual SIM 64GB Midnight Green",
                            Price = 1200m,
                            SalePercent = (byte)20,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 1,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 2,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "samsungphone.jpg",
                            Name = "Samsung Galaxy A20s Dual Sim SM - A207F / DS 32GB 4G LTE Red",
                            Price = 1400m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 2,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 3,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "huaweiphone.jpg",
                            Name = "Honor 8C Dual BKK-LX2 3GB/32GB 4G LTE Black",
                            Price = 160m,
                            SalePercent = (byte)14,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 3,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 4,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "xiaomiphone.jpg",
                            Name = "Xiaomi Mi Note 10 Pro Dual M1910F4S 8GB/256GB 4G LTE",
                            Price = 455m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 4,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 5,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "nokiaphone.jpg",
                            Name = "Nokia 2.2 Dual TA-1188 2GB/16GB 4G LTE Black",
                            Price = 93m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 5,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 6,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "lgphone.jpg",
                            Name = "LG V30 Dual H930D 64GB 4G LTE Black",
                            Price = 300m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 6,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 7,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "panasonicphone.jpg",
                            Name = "Panasonic Eluga A3 Dual 16GB 4G LTE Gold",
                            Price = 164m,
                            SalePercent = (byte)34,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 7,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 8,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "realmephone.jpg",
                            Name = "Realme 5 Pro Dual RMX1971 4GB/128GB 4G LTE Sparking",
                            Price = 200m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 8,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 9,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "honorphone.jpg",
                            Name = "Honor 8A Pro Dual JAT-L41 3GB/64GB 4G LTE Blue",
                            Price = 430m,
                            SalePercent = (byte)12,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 9,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 10,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "caterpillarphone.jpg",
                            Name = "Cat B25 Dual SIM Black",
                            Price = 59m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 10,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 11,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "motorolaphone.jpg",
                            Name = "Motorola One Macro Dual PAGS0005IN 4GB/64GB 4G LTE",
                            Price = 152m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 11,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 12,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "phonecase.jpg",
                            Name = "X-Doria iPhone XS/X Case Defense Defense Shield Rose",
                            Price = 16m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 12,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 13,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "smartwatch.jpg",
                            Name = "Samsung Galaxy Watch Active 2 44mm Bluetooth Smartwatch",
                            Price = 335m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 13,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 14,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "jbl.jpg",
                            Name = "JBL TUNE 500BT Wireless On-Ear Headphones (Blue)",
                            Price = 52m,
                            SalePercent = (byte)4,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 14,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 15,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "phoneglass.jpg",
                            Name = "Ferrari Off Track Tempered Glass with Invisible Logo for iPhone Xs",
                            Price = 5m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 15,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 16,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "appletv.jpg",
                            Name = "Apple TV 4K 32GB (MQD22)",
                            Price = 199m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 16,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 17,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "appleipod.jpg",
                            Name = "Apple iPod touch 32GB 7th Generation (Pink)",
                            Price = 239m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 17,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 18,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "lgtv.jpg",
                            Name = "LG 43-Inch 4K UHD TV 43UK6400 Black",
                            Price = 400m,
                            SalePercent = (byte)7,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 18,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 19,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "asuscomp.jpg",
                            Name = "ASUS ROG Zephyrus GX701GXR-HG122T Gaming",
                            Price = 3740m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 19,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 20,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "imac.jpg",
                            Name = "Apple iMac Pro 27 MQ2Y2 with Retina 5K Display(Late 2017)",
                            Price = 5000m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 20,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 21,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "hpprint.jpg",
                            Name = "HP ScanJet Pro 2500 f1 (L2747A)",
                            Price = 330m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 21,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 22,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "hpmon.jpg",
                            Name = "HP 32s Monitor 2UD96AA Black/Silver",
                            Price = 285m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 22,
                            TestDate = (byte)0
                        },
                        new
                        {
                            Id = 23,
                            GuaranteeDate = (byte)0,
                            GuaranteePrice = (byte)0,
                            IsInBasket = false,
                            MainPhoto = "sandisk.jpg",
                            Name = "SanDisk iXpand Flash Drive for iPhone and iPad (64GB)",
                            Price = 78m,
                            SalePercent = (byte)0,
                            ShipPrice = (byte)0,
                            SubCategoryItemsId = 23,
                            TestDate = (byte)0
                        });
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.RegisterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("RegisterModels");
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.Social", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.ToTable("Socials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Link = "#",
                            Photo = "google.png"
                        },
                        new
                        {
                            Id = 2,
                            Link = "#",
                            Photo = "facebook.png"
                        },
                        new
                        {
                            Id = 3,
                            Link = "#",
                            Photo = "twitter.png"
                        },
                        new
                        {
                            Id = 4,
                            Link = "#",
                            Photo = "vk.png"
                        },
                        new
                        {
                            Id = 5,
                            Link = "#",
                            Photo = "watsup.png"
                        },
                        new
                        {
                            Id = 6,
                            Link = "https://www.instagram.com/ay.xan11/",
                            Photo = "instagram.png"
                        });
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Telefonlar"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Mobil aksessuarlar"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "TV və audio"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "Kompüter"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Name = "Periferiya qurğuları"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Name = "Kompüter ehtiyyat hissələri"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Name = "Tabletlər üçün üzlüklər və qapaqlar"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Name = "Şəbəkə avadanlığı"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Name = "Oyun"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            Name = "Foto aksessuarları"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 5,
                            Name = "Mətbəx avadanlıqları"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 5,
                            Name = "Məişət avadanlıqları"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 5,
                            Name = "Gözəllik məhsulları"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 6,
                            Name = "Ətriyyat"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 7,
                            Name = "Tekstil"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 7,
                            Name = "Qab-qacaq"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 7,
                            Name = "Ofis mebeli"
                        });
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.SubCategoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("SubCategoryItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "APPLE",
                            PhotoPath = "apple.jpg",
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "SAMSUNG",
                            PhotoPath = "samsung.jpg",
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "HUAWEI",
                            PhotoPath = "huawei.jpg",
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "XIAOMI",
                            PhotoPath = "xiaomi.jpg",
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "NOKIA",
                            PhotoPath = "nokia.jpg",
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "LG",
                            PhotoPath = "lg.jpg",
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "PANASONIC",
                            PhotoPath = "panasonic.jpg",
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 8,
                            Name = "REALME",
                            PhotoPath = "realme.jpg",
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 9,
                            Name = "HONOR",
                            PhotoPath = "honor.jpg",
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 10,
                            Name = "CATERPILLAR",
                            PhotoPath = "caterpillar.jpg",
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 11,
                            Name = "MOTOROLA",
                            PhotoPath = "motorola.jpg",
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 12,
                            Name = "Örtük və qutular",
                            PhotoPath = "case.jpg",
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 13,
                            Name = "Smart saatlar",
                            PhotoPath = "smart_watch.jpg",
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 14,
                            Name = "Qulaqcıqlar",
                            PhotoPath = "headsets.jpg",
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 15,
                            Name = "Ekran qoruyucuları",
                            PhotoPath = "screen_protector.jpg",
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 16,
                            Name = "DVD və BLUE-RAY pleyerlər",
                            PhotoPath = "dvd_player.jpg",
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 17,
                            Name = "İPOD və MP3 pleyerlər",
                            PhotoPath = "ipod.jpg",
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 18,
                            Name = "Televizorlar",
                            PhotoPath = "tv.jpg",
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 19,
                            Name = "Noutbuklar",
                            PhotoPath = "Laptops.jpg",
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 20,
                            Name = "Masaüstü kompüterlər",
                            PhotoPath = "Desktops.jpg",
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 21,
                            Name = "Printerlər və çoxfunksiyalı avadanlıqlar",
                            PhotoPath = "Printers.jpg",
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 22,
                            Name = "Monitorlar",
                            PhotoPath = "Monitors.jpg",
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 23,
                            Name = "USB flash kartlar",
                            PhotoPath = "usb_flash.jpg",
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 24,
                            Name = "Operativ yaddaşlar",
                            PhotoPath = "memory_ram.jpg",
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 25,
                            Name = "Daxili sərt disklər (HDD)",
                            PhotoPath = "hard_drivers.jpg",
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 26,
                            Name = "Xüsusi qələmlər",
                            PhotoPath = "Styluses.jpg",
                            SubCategoryId = 7
                        },
                        new
                        {
                            Id = 27,
                            Name = "Məlumat saxlama qurğuları",
                            PhotoPath = "storage.jpg",
                            SubCategoryId = 8
                        },
                        new
                        {
                            Id = 28,
                            Name = "Routerlər",
                            PhotoPath = "Routers.jpg",
                            SubCategoryId = 8
                        },
                        new
                        {
                            Id = 29,
                            Name = "Oyun konsolları",
                            PhotoPath = "Consoles.jpg",
                            SubCategoryId = 9
                        },
                        new
                        {
                            Id = 30,
                            Name = "Oyun nəzarətçiləri",
                            PhotoPath = "controller.jpg",
                            SubCategoryId = 9
                        },
                        new
                        {
                            Id = 31,
                            Name = "Video oyunlar",
                            PhotoPath = "games.jpg",
                            SubCategoryId = 9
                        },
                        new
                        {
                            Id = 32,
                            Name = "Fotokameralar",
                            PhotoPath = "Cameras.jpg",
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 33,
                            Name = "Foto obyektivlər",
                            PhotoPath = "Lenses.jpg",
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 34,
                            Name = "VideoKameralar",
                            PhotoPath = "Camcorders.jpg",
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 35,
                            Name = "Soyuducular",
                            PhotoPath = "Refrigerators.jpg",
                            SubCategoryId = 11
                        },
                        new
                        {
                            Id = 36,
                            Name = "Qaz sobaları",
                            PhotoPath = "gas.jpg",
                            SubCategoryId = 11
                        },
                        new
                        {
                            Id = 37,
                            Name = "Ütülər",
                            PhotoPath = "irons.jpg",
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 38,
                            Name = "Kondisionerlər",
                            PhotoPath = "conditioners.jpg",
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 39,
                            Name = "Tərəzilər",
                            PhotoPath = "Scales.jpg",
                            SubCategoryId = 13
                        },
                        new
                        {
                            Id = 40,
                            Name = "Epilyatorlar",
                            PhotoPath = "Epilators.jpg",
                            SubCategoryId = 13
                        },
                        new
                        {
                            Id = 41,
                            Name = "Kişi ətirləri",
                            PhotoPath = "men.jpg",
                            SubCategoryId = 14
                        },
                        new
                        {
                            Id = 42,
                            Name = "Qadın ətirləri",
                            PhotoPath = "women.jpg",
                            SubCategoryId = 14
                        },
                        new
                        {
                            Id = 43,
                            Name = "Masa örtüyü",
                            PhotoPath = "masa.jpg",
                            SubCategoryId = 15
                        },
                        new
                        {
                            Id = 44,
                            Name = "Mətbəx tekstili",
                            PhotoPath = "kitchen.jpg",
                            SubCategoryId = 15
                        },
                        new
                        {
                            Id = 45,
                            Name = "Qabyuyan aksessuarları",
                            PhotoPath = "dish_acss.jpg",
                            SubCategoryId = 16
                        },
                        new
                        {
                            Id = 46,
                            Name = "Qazanlar və tavalar",
                            PhotoPath = "dishes.jpg",
                            SubCategoryId = 16
                        },
                        new
                        {
                            Id = 47,
                            Name = "İş lampaları",
                            PhotoPath = "lamp.jpg",
                            SubCategoryId = 17
                        },
                        new
                        {
                            Id = 48,
                            Name = "Kreslolar",
                            PhotoPath = "kreslo.jpg",
                            SubCategoryId = 17
                        });
                });

            modelBuilder.Entity("FinalProjectV2.Data.Entities.ProductSpec", b =>
                {
                    b.HasOne("ProjectAPI.Data.Entities.Product", "Product")
                        .WithMany("ProductSpecs")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProjectV2.Data.Entities.Specification", "Specification")
                        .WithMany("ProductSpecs")
                        .HasForeignKey("SpecificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.Marka", b =>
                {
                    b.HasOne("ProjectAPI.Data.Entities.SubCategoryItem", "SubCategoryItems")
                        .WithMany("Markas")
                        .HasForeignKey("SubCategoryItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.Model", b =>
                {
                    b.HasOne("ProjectAPI.Data.Entities.Marka", "Marka")
                        .WithMany("Models")
                        .HasForeignKey("MarkaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.Photo", b =>
                {
                    b.HasOne("ProjectAPI.Data.Entities.Product", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.Product", b =>
                {
                    b.HasOne("ProjectAPI.Data.Entities.SubCategoryItem", "SubCategoryItems")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.SubCategory", b =>
                {
                    b.HasOne("ProjectAPI.Data.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectAPI.Data.Entities.SubCategoryItem", b =>
                {
                    b.HasOne("ProjectAPI.Data.Entities.SubCategory", "SubCategory")
                        .WithMany("SubCategoryItems")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
